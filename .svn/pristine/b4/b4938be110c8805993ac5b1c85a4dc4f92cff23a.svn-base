<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<title>聚农优享</title>
		<meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
		<meta http-equiv="Pragma" content="no-cache" />
		<meta http-equiv="Expires" content="0" />
		<meta name="viewport" content="width=device-width,initial-scale=1.0, user-scalable=no, maximum-scale=1.0, minimum-scale=1.0">
		<link rel="stylesheet" href="css/reset.css">
		<link rel="stylesheet" href="css/public.css">
		<link rel="stylesheet" href="css/index.css">
		<script src="./js/vue.js"></script>
		<script src="js/index.js"></script>
		<script src="js/axios.min.js"></script>
		<script type="text/javascript" src="js/publick.js?v=3"></script>
		<script type="text/javascript" src="./js/api.js"></script>
		<script type="text/javascript" src="./js/jweixin-1.4.0.js"></script>
		<script src="js/vconsole.min.js"></script>
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vant@2.8.7/lib/index.css">
		<script src="https://cdn.jsdelivr.net/npm/vant@2.8.7/lib/vant.min.js"></script>

		<style>
			.van-nav-bar .van-icon {
				color: #333;
				font-size: 1.1rem;
			}

			.info {
				color: #28BD5C;
				margin: 15px;
			}

			.van-cell-group {
				margin-bottom: 10px;
			}

			.van-cell-group input::placeholder {
				color: #999;
			}
			
			.upload{padding: 15px;}
			.upload img{width:50px;height:50px;}

			.saveBtn {
				background: linear-gradient(#02CF0A, #00BE34);
				border: none;
				color: #fff;
				height: 44px;
				border-radius: 20px;
				font-size: 16px;
				width: 80%;
				margin: 20px auto;
				display: block;
			}
			
			.success{background: url(img/jiameng.png) no-repeat;width: 80%;height: 800px;background-size: 100%;position: relative;}
			.success p{height: 100%;}
			.success span{background: linear-gradient(#E10019,#FC3826);position: absolute;bottom: 350px;left: 10%;width: 80%;height: 35px;text-align: center;color: #FFF8C1;font-weight:bold;line-height: 35px;font-size: 16px;border-radius: 20px;}
		</style>
	</head>
	<body>
		<div id="main">
			<van-sticky>
				<van-nav-bar :border="false" title="加盟商信息" left-arrow @click-left="returnLast()"></van-nav-bar>
			</van-sticky>
			<p class="info">填写加盟商信息</p>
			<van-cell-group>
				<van-field v-model="shopName" placeholder="店铺名称"></van-field>
				<van-field v-model="name" placeholder="店铺联系人"></van-field>
				<van-field v-model="phone" placeholder="联系电话" maxlength="11"></van-field>
			</van-cell-group>
			<van-cell-group>
				<van-cell :title="address" is-link :style="{color:(address!='店铺地址'?'#323233':'#999')}" @click="showPicker"></van-cell>
				<van-field v-model="addressDetail" placeholder="详细地址"></van-field>
			</van-cell-group>
			<van-cell-group>
				<van-field v-model="range" placeholder="经营范围"></van-field>
			</van-cell-group>
			<van-cell-group>
				<van-cell title="店铺照片" is-link style="color:#999"></van-cell>
			
				<van-uploader :after-read="afterRead" class="upload">
					<img src="img/uploadPic2.png" alt="" v-if="shopPic == ''">
					<img :src="shopPic" alt="" v-else>
				</van-uploader>
			</van-cell-group>

			<button class="saveBtn" @click="submit">提交</button>

			<van-popup v-model="cityVisable" position="bottom">
				<van-picker show-toolbar title="请选择地区" value-key="name" :columns="areaList" @change="onAreaChange" @cancel="cityVisable=false"
				 @confirm="onAreaConfirm" />
			</van-popup>
			
			<van-popup v-model="isSuccess" class="success" :close-on-click-overlay="false">
				<p><span @click="toFaquan">我要发券</span></p>
			</van-popup>
		</div>
		<script>
			var app = new Vue({
				el: '#main',
				data: {
					baseUrl: 'http://sy.xfd365.com',
					// baseUrl: 'http://172.168.0.50',
					shopName: '',
					name: '',
					phone: '',
					range: '',
					address: '店铺地址',
					addressDetail:'',
					cityVisable: false,
					areaList: [{
							values: []
						},
						{
							values: []
						},
						{
							values: []
						},
						{
							values: []
						},
						{
							values: []
						}
					],
					provinceCode:'',
					cityCode:'',
					countyCode: '',
					districtCode:'',
					villageCode:'',
					shopPic:'',
					token: localStorage.getItem('token'),
					isSuccess:false
				},
				mounted() {
					this.isSuccess = false
				},
				methods: {
					returnLast() {
						window.location.href = 'sendCoupon.html'
					},
					showPicker() {
						this.cityVisable = true;
						this.cityList(1, '')
					},
					cityList(level, code) {
						axios.post(this.baseUrl + '/wx/users/addresss', {
							level: level,
							code: code
						}).then(res => {
							if (res.data.errno == 0) {
								if (level == 1) {
									this.areaList[0].values = [{
										name: "请选择",
										code: ""
									}, ...res.data.data];
								} else if (level == 2) {
									this.areaList[1].values = [{
										name: "请选择",
										code: ""
									}, ...res.data.data]
								} else if (level == 3) {
									this.areaList[2].values = [{
										name: "请选择",
										code: ""
									}, ...res.data.data]
								} else if (level == 4) {
									this.areaList[3].values = [{
										name: "请选择",
										code: ""
									}, ...res.data.data]
								} else if (level == 5) {
									this.areaList[4].values = [{
										name: "请选择",
										code: ""
									}, ...res.data.data]
								}
							}
						})
					},
					onAreaChange(picker, values, index) {
						if (index == 0) {
							if (values[0].code == "") {
								this.areaList[1].values = [];
								this.areaList[2].values = [];
								this.areaList[3].values = [];
								this.areaList[4].values = [];
							} else {
								this.areaList[2].values = [];
								this.areaList[3].values = [];
								this.areaList[4].values = [];
							}
							this.cityList(2, values[0].code);
						} else if (index == 1) {
							if (values[1].code == "") {
								this.areaList[2].values = [];
								this.areaList[3].values = [];
								this.areaList[4].values = [];
							} else {
								this.areaList[3].values = [];
								this.areaList[4].values = [];
							}
							this.cityList(3, values[1].code);
						} else if (index == 2) {
							if (values[2].code == "") {
								this.areaList[3].values = [];
								this.areaList[4].values = [];
							} else {
								this.areaList[4].values = [];
							}
							this.cityList(4, values[2].code);
						} else if (index == 3) {
							this.areaList[4].values = [];
							this.cityList(5, values[3].code);
						}
					},
					onAreaConfirm(value) {
						let address = "";
						for (var i = 0; i < value.length; i++) {
							if (value[i] != undefined) {
								if (
									value[0].code == "" ||
									value[1].code == "" ||
									value[2].code == "" ||
									value[3].code == "" ||
									value[4].code == ""
								) {
									this.$toast("请选择市区/县");
									this.address = "请选择";
								} else {
									this.provinceCode = value[0].code
									this.cityCode = value[1].code;
									this.countyCode = value[2].code;
									this.districtCode = value[3].code;
									this.villageCode = value[4].code;
									address += value[i].name;
									this.address = address;
									this.cityVisable = false;
								}
							} else {
								this.$toast("请选择市区/县");
								this.address = "请选择";
							}
						}
					},
					
					
					afterRead(file) {
						this.upload(file)
					},
					upload(file) {
						let formdata = new FormData();
						formdata.token = this.token
						// formdata.append("from", 'pc');
						formdata.append("token", this.token);
						//可以通过append()方法来追加数据
						if (file.file) {
							if (file.file.size > 500 * 1024) {
								let canvas = document.createElement("canvas"); // 创建Canvas对象(画布)
								let context = canvas.getContext("2d");
								let img = new Image();
								img.src = file.content; // 指定图片的DataURL(图片的base64编码数据)
								img.onload = () => {
									canvas.width = img.width * 0.5;
									canvas.height = img.height * 0.5;
									context.drawImage(img, 0, 0, img.width * 0.5, img.height * 0.5);
									file.content = canvas.toDataURL(file.file.type, 0.92); // 0.92为默认压缩质量
									let files = this.dataURLtoFile(file.content, file.file.name);
									files.content = canvas.toDataURL(files.type, 0.92);
									if (files.size > 600000) {
										this.upload(files);
									} else {
										formdata.append("file",files);
										this.uploadFile(formdata);
									}
								};
							} else {
								//小于500k直接上传
								formdata.append("file",file.file);
								this.uploadFile(formdata);
							}
						} else {
							if (file.size > 500 * 1024) {
								let canvas = document.createElement("canvas"); // 创建Canvas对象(画布)
								let context = canvas.getContext("2d");
								let img = new Image();
								img.src = file.content; // 指定图片的DataURL(图片的base64编码数据)
								img.onload = () => {
									canvas.width = img.width * 0.5;
									canvas.height = img.height * 0.5;
									context.drawImage(img, 0, 0, img.width * 0.5, img.height * 0.5);
									file.content = canvas.toDataURL(file.type, 0.92); // 0.92为默认压缩质量
									let files = this.dataURLtoFile(file.content, file.name);
									files.content = canvas.toDataURL(files.type, 0.92);
									if (files.size > 600000) {
										this.upload(files);
									} else {
										formdata.append("file",files);
										this.uploadFile(formdata);
									}
								};
							} else {
								//小于500k直接上传
								formdata.append("file",file);
								this.uploadFile(formdata);
							}
						}
					},
					dataURLtoFile(dataurl, filename) {
						// 将base64转换为file文件
						let arr = dataurl.split(",");
						let mime = arr[0].match(/:(.*?);/)[1];
						let bstr = atob(arr[1]);
						let n = bstr.length;
						let u8arr = new Uint8Array(n);
						while (n--) {
							u8arr[n] = bstr.charCodeAt(n);
						}
						return new File([u8arr], filename, {
							type: mime
						});
					},
					uploadFile(formdata, tag) {
						const instance = axios.create({
							//withCredentials:true
							// headers:{
							//   'authToken': localStorage.getItem('token')
							// }
						});
						instance
							.post(this.baseUrl + "/wx/distribution/dis_upload_img", formdata)
							.then(res => {
								if (res.data.errno == 0) {
									this.$toast.success("上传成功");
									this.shopPic = res.data.data.url
								} else {
									this.$toast(res.data.message);
								}
							}).catch((e) => {
								this.$toast(e)
							});
					},
					
					toFaquan(){
						window.location.href = 'fillCoupon.html'
					},
					submit(){
						let reg = /^1[3|4|5|6|7|8|9]\d{9}$/; //手机号
						if(this.name == ''){
							this.$toast('请填写店铺联系人');
							return
						}
						if(this.phone == ''){
							this.$toast('请填写店铺联系人电话');
							return
						}
						if(!reg.test(this.phone)){
							this.$toast('请填写正确的手机号格式');
							return
						}
						if(this.address == '店铺地址'){
							this.$toast('请选择店铺地址');
							return
						}
						if(this.addressDetail == ''){
							this.$toast('请填写店铺详细地址');
							return
						}
						let param = {}
						param.joiner_name = this.name;
						param.joiner_phone = this.phone;
						param.joiner_shop_name = this.shopName;
						param.joiner_shop_img = this.shopPic;
						param.province_code = this.provinceCode;
						param.city_code = this.cityCode;
						param.county_code = this.countyCode;
						param.street_code = this.districtCode;
						param.village_code = this.villageCode;
						param.addr = this.addressDetail;
						param.business_scope = this.range;
						param.token = this.token;
						
						
						axios.post(this.baseUrl + "/wx/distribution/apply_become_joiner",param).then(res=>{
							if(res.data.errno == 0){
								this.$toast(res.data.errmsg)
								this.isSuccess = true
							}else if(res.data.errno == 1){
								this.$toast(res.data.errmsg)
							}else if(res.data.errno == 3){
								this.$toast(res.data.errmsg)
							}
						})
					}
					
				}
			})
		</script>
	</body>
</html>
