<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
	<meta http-equiv="Pragma" content="no-cache" />
	<meta http-equiv="Expires" content="0" />

	<title>聚农优享</title>
	<meta name="viewport" content="width=device-width,initial-scale=1.0, user-scalable=no, maximum-scale=1.0, minimum-scale=1.0">
	<link rel="stylesheet" href="css/public.css">
	<link rel="stylesheet" href="css/elementIndex.css">
	<link rel="stylesheet" type="text/css" href="./css/aui.css" />
	<link rel="stylesheet" href="css/index.css">
	<script src="./js/vue.js"></script>
	<script src="js/index.js"></script>
	<script src="js/axios.min.js"></script>
	<script type="text/javascript" src="js/publick.js?v=3"></script>
	<script type="text/javascript" src="./js/jweixin-1.4.0.js" ></script>
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vant@2.8.7/lib/index.css">
	<script src="https://cdn.jsdelivr.net/npm/vant@2.8.7/lib/vant.min.js"></script>
	<style>
		[v-cloak] {
		  display: none;
		}
		html,body { font-size: 16px; height: 100%;}
		@media all and (max-width:375px) {
			body,html{
				font-size: 14px;
			}
		}
		@media only screen and (min-width: 414px) {
			body,html {
				font-size: 16px !important;
			}
		}
		@media only screen and (min-width: 480px) {
			body,html {
				font-size: 22px !important;
			}
		}
		/* 导航栏 */
		.van-nav-bar .van-icon { color: #333; font-size: 1.1rem; }
		.van-nav-bar .van-nav-bar__right { position: absolute; top: 50%; transform: translateY(-50%); display: flex; align-items: center; }
		.van-nav-bar .van-nav-bar__title { font-weight: bold; }
		/* 商品列表 */
		.goods-group { padding: 0.75rem; }
		.goods-group .van-card { background: #fff; border-radius: 8px; overflow: hidden; box-shadow: 0 0 8px rgba(0,0,0,.1) } 
		.goods-group .van-card .van-card__title { font-size: 0.875rem; font-weight: bold; }
		.goods-group .van-card .van-card__desc { margin-top: 0.4rem; }
		.goods-group .van-card .van-card__bottom .van-card__price { color: rgb(243, 96, 101) }
		.goods-group .van-card .van-card__bottom .van-card__price .price-icon { font-size: 0.875rem; }
		.goods-group .van-card .van-card__bottom .van-card__price .price { font-size: 1.2rem; font-weight: bold; }
		/* loading */
		.full-loading { position: fixed; left: 0; top: 46px; right: 0; bottom: 0; background-color: #fff; z-index: 9999; }
		.full-loading .van-loading { position: absolute; top: 50%; left: 50%; transform: translate(-50%,-50%) }
		/* 无数据 */
		.no-data { position: fixed; top: 46px; left: 0; right: 0; bottom: 0; z-index: 99;}
		.no-data .no-data-con { position: absolute;  width: 90%; top: 50%; left: 50%; transform: translate(-50%,-50%); text-align: center; }
		.no-data .no-data-con img { width: 100%; }
		.no-data .no-data-con .no-title{ font-size: 1rem; font-weight:600;  color:rgba(0,0,0,1);  }
		.no-data .no-data-con .no-desc { font-size: 0.75rem; font-weight:400; color:rgba(136,136,136,1); padding: 0.8rem 0; }
		.no-data .no-data-con .van-button { font-size: 0.75rem; font-weight:400; color:rgba(1,195,39,1); }
	</style>
</head>
<body>
	<div id="app" v-cloak>
		<van-nav-bar :border="false" :fixed="true" :placeholder="true" z-index="9999" title="我的收藏" left-arrow @click-left="returnLast()" >
			<template #right>
				<span @click="setDel()"  @click="setDel()">管理</span>
			</template>
		</van-nav-bar>
		<div class="goods-group" v-if="collectList && collectList.length > 0">
			<van-card  v-for="(x,index) in collectList" :desc="x.desc" :title="x.goods_name" :thumb="x.thumb" @click="jump(x.goods_id)">
				<template #price>
					<span class="price-icon">￥</span>
					<span class="price">{{x.retail_price}}</span>
				</template>
				<template #footer>
					<van-button type="danger" size="small" round @click.stop="delCollect(index)" v-show="isDel">删除</van-button>
				</template>
			</van-card>
		</div>
		<div class="full-loading" v-if="isFullLoading">
			<van-loading  color="#1989fa" /> 
		</div>

		<div class="no-data" v-if="(collectList.length === 0 || isErr) && !isFullLoading">
			<div class="no-data-con">
				<img :src="isErr ? errImg : noDataImg" alt="">
				<p class="no-title">{{ isErr ? '网络竟然崩溃了' : '收藏空空的' }}</p>
				<p class="no-desc">{{ isErr ? '别紧张,试试看刷新页面' : '赶紧慰劳下自己吧' }}</p>
				<van-button size="small" plain round color="#01C327" @click="handleErr">{{ isErr ? '刷新' : '去逛逛' }}</van-button>
			</div>
		</div>
	</div>

	<script>

		var app = new Vue({
			el: '#app',
			data: {
				isDel:false,
				JumpUrl:{
					list:'http://sy.xfd365.com/wx/collect/new_lists',
					// list:'http://172.168.0.50/wx/collect/new_lists',
					delCollect:'http://sy.xfd365.com/wx/collect/addordelete',
					// delCollect:'http://172.168.0.50/wx/collect/addordelete',
					jssdkUrl: 'http://sy.xfd365.com/wx/jssdk/getSignPackage',
				},
				noDataImg: './images/icon/no-goods.png',
				errImg: './images/err.png',
				isErr: false,
				isFullLoading: true,
				collectList:[],
				token:localStorage.getItem('token')
			},
			methods: {
				//返回上一页
				returnLast(){
					window.history.go(-1);
				},
				setDel(){
					this.isDel=!this.isDel
				},
				// 跳转详情
				jump(id) {
					window.location.href = 'goodsDetails.html?id='+id+'&v=1'
				},
				handleErr() {
					if(this.isErr) {
						this.getCollectList()
					}else {
						window.location.href = "index.html?v=11";
					}
				},
			    //取消收藏
				delCollect(index){
					let that=this;
					axios({
						method: 'post',
						url: that.JumpUrl.delCollect,
						//data: form_data
						data: {
							goods_id:that.collectList[index].goods_id ,
							token:localStorage.getItem('token')
						}
					}).then(function (resp) {
						if(resp.data.errno == 0){
							that.collectList.splice(index,1)
							that.$toast('删除成功')
						}

					})

				},
				//收藏列表
				getCollectList(){
					var that = this;
					that.isFullLoading = true;
					that.isErr = false;
			    	axios({
			    		method: 'post',
			    		url: that.JumpUrl.list,
			    		data: {
			    			token:that.token
			    		}
			    	})
			    	.then(function (resp) {
						that.isFullLoading = false;
						that.isErr = false;
						that.collectList=resp.data.data

			    	}).catch(function (error) {
						that.isFullLoading = false;
						that.isErr = true;
						//请求失败
						console.log('error', error);

					})
				},

				setWx() {
					let that = this;
					let shopInfo = JSON.parse(localStorage.getItem('shopInfo'))
					// let shopInfo = that.shopInfo;
					let share_title = shopInfo.share_title ? shopInfo.share_title : shopInfo.shop_name
					let share_introduction = shopInfo.share_introduction
					let shop_id = shopInfo.id
					let logo = shopInfo.share_pic ? shopInfo.share_pic : shopInfo.logo
					let lock_user_id = localStorage.getItem('lock_user_id')
					wx.ready(function () { //需在用户可能点击分享按钮前就先调用
						wx.updateAppMessageShareData({
							title: share_title, // 分享标题
							desc: share_introduction, // 分享描述
							// link: that.share_url, // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
							link: 'http://sy.xfd365.com/mobile/index.html?shop_id=' + shop_id + '&lock_user_id=' + lock_user_id +'&v=11', // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
							imgUrl: logo, // 分享图标
							success: function () {
				
							}
						})
				
						wx.updateTimelineShareData({
							title: share_title, // 分享标题
							desc: share_introduction, // 分享描述
							// link: that.share_url, // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
							link: 'http://sy.xfd365.com/mobile/index.html?shop_id=' + shop_id + '&lock_user_id=' + lock_user_id +'&v=11', // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
							imgUrl: logo, // 分享图标
							success: function () {},
						})
					});
				},
				getJssdk: function() {
					let that = this;
					axios({
						method: 'post',
						url: that.JumpUrl.jssdkUrl,
						//data: form_data
						data: {
							token: that.token,
							url: window.location.href
						}
					}).then(function(resp) {
						let data = resp.data
					
						let sdkData = resp.data
						wx.config({
							debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
							appId: sdkData.appId, // 必填，公众号的唯一标识
							timestamp: sdkData.timestamp, // 必填，生成签名的时间戳
							nonceStr: sdkData.nonceStr, // 必填，生成签名的随机串
							signature: sdkData.signature, // 必填，签名
							jsApiList: [
								'updateAppMessageShareData',
								'updateTimelineShareData',
							] // 必填，需要使用的JS接口列表
						});
						that.share_url = sdkData.url;
						that.setWx();
				
					})
				},

			},
			created:function(){
				this.getJssdk();
				this.getCollectList()
			},
		})
	</script>
</body>

</html>