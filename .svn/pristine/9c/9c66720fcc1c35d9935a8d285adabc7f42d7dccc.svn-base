<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
		<meta http-equiv="Pragma" content="no-cache" />
		<meta http-equiv="Expires" content="0" />
		<title>聚农优享</title>
		<meta name="viewport" content="width=device-width,initial-scale=1.0, user-scalable=no, maximum-scale=1.0, minimum-scale=1.0">
		<link rel="stylesheet" href="css/reset.css">
		<link rel="stylesheet" href="css/public.css">
		<link rel="stylesheet" href="font/font_560087_tt31urijhi307ldi/iconfont.css">
		<link rel="stylesheet" href="css/index.css">
		<script src="./js/rem.js"></script>
		<script src="./js/vue.js"></script>
		<script src="js/index.js"></script>
		<script src="js/axios.min.js"></script>
		<script type="text/javascript" src="js/publick.js?v=3"></script>
		<script type="text/javascript" src="js/api.js"></script>
		<script type="text/javascript" src="./js/jweixin-1.4.0.js"></script>
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vant@2.5.9/lib/index.css">
		<script src="https://cdn.jsdelivr.net/npm/vant@2.5.9/lib/vant.min.js"></script>
		<style>
			body{
				font-size: 14px;
			}
			/* 商品列表 */
			.goods-con  {  background: transparent; position: relative;  }
			.goods-con .van-grid-item .van-grid-item__content { border-radius: 8px; height: auto!important; justify-content: inherit;box-shadow:0 0 8px rgba(0,0,0,.1) }
			.goods-con .van-grid-item__icon-wrapper { width: 100%; height: calc(50vw - 31px); }
			.goods-con .no-sale { position: absolute; top: 50%; left: 50%;background: rgba(0,0,0,0.6); transform: translate(-50%,-50%);width: 1rem; height: 0.48rem; border-radius: 4px; color: #fff; font-size: 0.24rem; text-align: center; line-height: 0.48rem; }
			.goods-con .goods-title { font-size: 0.26rem; font-weight: bold; width: calc(50vw - 31px); height: 20px;overflow: hidden;text-overflow: ellipsis; white-space: nowrap; margin-top: 6px;}
			.goods-con .goods-spec { width: 100%; font-size: 0.24rem;margin-top: 6px;color: #888;width: calc(50vw - 31px); height: 20px;overflow: hidden;text-overflow: ellipsis; white-space: nowrap; }
			.goods-con .price-con { width: calc(50vw - 31px); display: flex; align-items: center; justify-content: space-between; overflow: hidden; }
			.goods-con .price-con .left-con { width: calc(50vw - 31px); overflow: hidden;  }
			.goods-con .price-con .left-con .price-cell { width: 100%; display: flex; align-items: center;flex-direction: column; }
			.goods-con .price-con .left-con .price-cell .price { font-size: 0.32rem; font-weight: bold; color: #fa193f;height: 30px;line-height: 30px; overflow: hidden; text-overflow: ellipsis; width: 100%;white-space: nowrap; }
			.goods-con .price-con .left-con .price-cell .price .price-icon { font-size: 0.28rem; }
			.goods-con .price-con .left-con .price-cell .price .unit { color: #888; font-size: 0.26rem; font-weight: 400; }
			.goods-con .price-con .left-con .price-cell .price2 { font-size: 0.28rem; color: #888; text-decoration: line-through; overflow: hidden; text-overflow: ellipsis; width: 100%;white-space: nowrap;}
			.van-nav-bar .van-icon{
				color: #333;
			}
		</style>
	</head>
	<body>
		<div id="app">
			<van-nav-bar :border="false" :fixed="true" :placeholder="true" z-index="9999" title="分销商品列表" left-arrow @click-left="returnLast()"></van-nav-bar>
			<div style="position: relative; min-height: 9rem;">
				<template v-if="goods_list && goods_list.length > 0">
					<van-grid :column-num="2" :gutter="10" class="goods-con">
						<van-grid-item v-for="(item, index) in goods_list">
							<template #icon>
								<van-image @click="details(item.goods_id, item.spcifi_name)" width="100%" height="100%" fit="contain" :style="item.storage <= 0 ? 'opacity:0.4': ''"
								 :src="item.thumb ? item.thumb : 'http://sy.xfd365.com/public/uploads/exp.jpg'"></van-image>
								<div class="no-sale" v-if="item.storage <= 0">已售罄</div>
							</template>
							<template #text>
								<div class="goods-title" :style="item.storage <= 0 ? 'opacity:0.6': ''">{{item.goods_name}}</div>
								<div class="goods-spec" :style="item.storage <= 0 ? 'opacity:0.6': ''">{{item.spcifi_name_new}}</div>
								<div class="price-con">
									<div class="left-con" :style="item.storage <= 0 ? 'opacity:0.6': ''">
										<div class="price-cell" v-if="item.promotion_price && item.num <=(item.promotion_num-item.has_buy)">
											<span class="price" v-if="item.unit"><span class="price-icon">￥</span>{{item.promotion_price}}<span class="unit">/{{item.unit}}</span></span>
											<span class="price" v-else><span class="price-icon">￥</span>{{item.promotion_price}}</span>
											<span class="price2" v-if="item.unit"><span class="price-icon"></span>{{item.promotion_price}}<span class="unit">/{{item.unit}}</span></span>
											<span class="price2" v-else><span class="price-icon">￥</span>{{item.promotion_price}}</span>
										</div>
										<div class="price-cell" v-else>
											<span class="price" v-if="item.unit"><span class="price-icon">￥</span>{{item.retail_price}}<span class="unit">/{{item.unit}}</span></span>
											<span class="price" v-else><span class="price-icon">￥</span>{{item.retail_price}}</span>
										</div>
									</div>
									<div class="right-con">
										<span v-if="item.storage <= 0" style="display: block; border: none;font-size: 0.24rem;width: 0.42rem;height: 0.42rem; background-image: url(images/icon/shouqin.png);background-size: 100% 100%;margin-bottom: 5px;"></span>
										<div v-if="item.num == 0 && item.storage!=0 " style="display: flex;justify-content: flex-end;margin-bottom: 5px;">
											<img src="images/jiagou.png" alt="" style="width: 0.42rem;height: 0.42rem;" @click="addG(index,item.goods_id,item.spcifi_id, item.promotion_num, item.has_buy, item.storage)">
										</div>
										<div v-if="item.num > 0 && item.storage>0" style="display: flex;justify-content: flex-end;">
											<img src="./images/speedBuy/jian.png" alt="" class="fl" style="width: 0.42rem;height: 0.42rem;" @click="reduceChange(item.goods_id,item.spcifi_id,item.num, index)">
											<div class="fl" style="margin-left: 5px;margin-right: 5px;margin-top: 2px;max-width: 20px; overflow: hidden; overflow-x: auto;">{{item.num}}</div>
											<img src="./images/jiagou.png" alt="" class="fl" style="width: 0.42rem;height: 0.42rem;" @click="addChange(item.goods_id,item.spcifi_id,item.promotion_num, item.has_buy, item.storage)">
										</div>
									</div>
								</div>
							</template>
						</van-grid-item>
					</van-grid>
				</template>
				<template v-else>
					<div class="no-data-con">
						<img src="./images/icon/no-goods.png" alt="">
						<p class="no-title">该分类下商品为空</p>
						<p class="no-desc">赶紧去其他分类逛逛吧</p>
					</div>
				</template>
				<div v-if="goods_list && goods_list.length > 0 && isNoData" style="font-size: 0.28rem; text-align: center; padding: 10px 0 5px 0; color: #888;">没有更多了</div>
			</div>
			<!-- 列表 -->
			
			<div class="message-page-mask" v-show="message.show==1">
				<div class="message-page-mask-content">
					<div class="el-loading-spinner">
						<i v-show="message.type=='success' " class="el-icon-success"></i>
						<i v-show="message.type=='error' " class="el-icon-error"></i>
			
						<p class="el-loading-text">{{message.text}}</p>
					</div>
				</div>
			</div>
		</div>
		<script type="text/javascript">
			var app = new Vue({
				el: '#app',
				data: {
					jumpUrl: {
						list: baseUrl('/wx/distribute/distribute_goods'),
						index: baseUrl('/wx/cart/new_cart'),
						add: baseUrl('/wx/cart/new_add'),
						jssdkUrl: baseUrl('/wx/jssdk/getSignPackage'),
					},
					goods_list: [], //商品列表
					cartList:[],//购物车列表
					addGoods: {
						goods_id: '',
						number: 0,
						is_now: 0,
						token: localStorage.getItem("token"),
					},
					page: 1,
					loading: 0,
					isDone: 0,
					message: {
						show: 0,
						type: 'success',
						text: '成功',
					},
					token:localStorage.getItem('token')
				},
				mounted() {
					this.myCart()
					this.getGoodsList()
					this.getJssdk()
				},
				methods: {
					setWx() {
						let that = this;
						let shopInfo = JSON.parse(localStorage.getItem('shopInfo'))
						// let shopInfo = that.shopInfo;
						let share_title = shopInfo.share_title ? shopInfo.share_title : shopInfo.shop_name
						let share_introduction = shopInfo.share_introduction
						let shop_id = shopInfo.id
						let logo = shopInfo.share_pic ? shopInfo.share_pic : shopInfo.logo
						let lock_user_id = localStorage.getItem('lock_user_id')
						wx.ready(function () { //需在用户可能点击分享按钮前就先调用
							wx.updateAppMessageShareData({
								title: share_title, // 分享标题
								desc: share_introduction, // 分享描述
								// link: that.share_url, // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
								link: 'http://sy.xfd365.com/mobile/index.html?shop_id=' + shop_id + '&lock_user_id=' + lock_user_id +'&v=11', // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
								imgUrl: logo, // 分享图标
								success: function () {
					
								}
							})
					
							wx.updateTimelineShareData({
								title: share_title, // 分享标题
								desc: share_introduction, // 分享描述
								// link: that.share_url, // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
								link: 'http://sy.xfd365.com/mobile/index.html?shop_id=' + shop_id + '&lock_user_id=' + lock_user_id +'&v=11', // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
								imgUrl: logo, // 分享图标
								success: function () {},
							})
						});
					},
					getJssdk: function() {
						let that = this;
						axios({
							method: 'post',
							url: that.jumpUrl.jssdkUrl,
							//data: form_data
							data: {
								token: that.token,
								url: encodeURIComponent(location.href.split('#')[0])
							}
						}).then(function(resp) {
							let data = resp.data
						
							let sdkData = resp.data
							wx.config({
								debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
								appId: sdkData.appId, // 必填，公众号的唯一标识
								timestamp: sdkData.timestamp, // 必填，生成签名的时间戳
								nonceStr: sdkData.nonceStr, // 必填，生成签名的随机串
								signature: sdkData.signature, // 必填，签名
								jsApiList: [
									'updateAppMessageShareData',
									'updateTimelineShareData',
								] // 必填，需要使用的JS接口列表
							});
							that.setWx();
						})
					},
					//返回上一页
					returnLast() {
						window.history.go(-1);
					},
					// 商品列表
					getGoodsList() {
						let that = this
						axios.post(that.jumpUrl.list, {
							page: that.page,
							distribute_id: getQueryString('distribute_id'),
							token: that.token
						}).then(res => {
							that.loading = 0;
							if (res.data.errno == 0) {
								if (res.data.data.data.length == 0) {
									that.isDone = 1;
									that.loading = 0;
									that.isNoData = true
									return
								}
								let cartList = that.cartList
								for (var i = 0; i < res.data.data.data.length; i++) {
									res.data.data.data[i].num = 0;
									for (var j = 0; j < cartList.length; j++) {
										if (cartList[j].goods_id == res.data.data.data[i].goods_id &&
											cartList[j].spcifi_id == res.data.data.data[i].spcifi_id) {
											res.data.data.data[i].num = cartList[j].number;
										}
									}
								};
								that.goods_list = res.data.data.data

								if (res.data.data.data.length < res.data.data.size) {
									that.isDone = 1;
									that.loading = 0;
									that.isNoData = true
								}
							}
						}).catch(function(error) {
							that.loading = 0;
							//请求失败
							console.log('error', error);

						})
					},
					
					//商品详情
					details(id, spcifi_name) {
						/*页面高度*/
						var scrollTop = 0;
						if (document.documentElement && document.documentElement.scrollTop) {
							scrollTop = document.documentElement.scrollTop;
						} else if (document.body) {
							scrollTop = document.body.scrollTop;
						}
						localStorage.setItem('goods_list', JSON.stringify(this.goods_list))
					
						localStorage.setItem('curr', this.curr)
						localStorage.setItem('cateId', this.cate_id)
						localStorage.setItem('index_scroll', scrollTop)
					
						if (spcifi_name) {
							var dataPromotion = {}
							dataPromotion.spcifi_name = spcifi_name
							localStorage.setItem('dataPromotion', JSON.stringify(dataPromotion))
						} else {
							localStorage.setItem('dataPromotion', '')
						}
						window.location.href = "goodsDetails.html" + '?' + 'id=' + id+'&v=2';
					
					},
					// 加入购物车
					addG(index, goods_id, spcifi_id, promotion_num, has_buy, storage) {
						let that = this;
						let canBuyName = promotion_num - has_buy;
						let carNum = 0;
						let cartList = that.cartList
						cartList.forEach(function (ele) {
							if (ele.goods_id == goods_id && ele.spcifi_id == spcifi_id) {
								carNum = ele.number;
							}
						})
						if (carNum >= storage) {
							that.message = {
								show: 1,
								text: '库存不足',
								type: 'error'
							}
							setTimeout(function () {
								that.message.show = 0;
							}, 2000)
							return
						} else {
							if ((promotion_num == has_buy || carNum == canBuyName) && has_buy != -1) {
								that.$toast('每人限购' + promotion_num + '件，超出数量将按原价累加')
							}
							that.i = index;
							that.addGoods.goods_id = goods_id;
							that.addGoods.spcifi_id = spcifi_id;
							that.addGoods.number = 1;
							that.addCart(-1);
						}
					
						// this.i = index;
						// this.addGoods.goods_id = goods_id;
						// this.addGoods.number = 1;
						// this.addCart(-1);
					},
					
					//获取购物车内容
					myCart() {
						let that = this;
						let form_data = new FormData();
						makeFormData(that.addGoods, form_data);
						axios({
								method: 'post',
								url: that.jumpUrl.index,
								data: form_data
							})
							.then(function (resp) {
								that.cartList = resp.data.data.cartList;
								that.count = resp.data.data.cartTotal.checkedGoodsCount;
								// console.log(that.cartList)
							}).catch(function (error) {
								//请求失败
								console.log('error', error);
					
							})
					},
					//增加商品
					addChange(goods_id, spcifi_id, promotion_num, has_buy, storage) {
						var that = this;
						let canBuyName = promotion_num - has_buy;
						let carNum = 0;
						let cartList = that.cartList
						cartList.forEach(function (ele) {
							if (ele.goods_id == goods_id && ele.spcifi_id == spcifi_id) {
								carNum = ele.number;
							}
						})
					
						if (carNum >= storage) {
							that.message = {
								show: 1,
								text: '库存不足',
								type: 'error'
							}
							setTimeout(function () {
								that.message.show = 0;
							}, 2000)
							return;
						} else {
							if ((promotion_num == has_buy || carNum == canBuyName) && has_buy != -1) {
								that.$toast('每人限购' + promotion_num + '件，超出数量将按原价累加')
							}
							that.addGoods.goods_id = goods_id
							that.addGoods.spcifi_id = spcifi_id
							that.addGoods.number = 1;
							that.addCart();
						}
					
					},
					
					//减去商品
					reduceChange(goods_id, spcifi_id, num, index) {
						var that = this;
						that.addGoods.goods_id = goods_id;
						that.addGoods.spcifi_id = spcifi_id;
						that.addGoods.number = -1;
					
						if (num < 1) {
							return;
							that.addGoods.number = 0
						} else {
							that.addCart(index);
							that.addGoods.number = -1;
						}
						let goods_list = that.goods_list
						if (that.cartList.length == 0) {
							that.flag = 1;
							goods_list.forEach(function (ele) {
								ele.num = 0
							})
						} else {
							let ids = []
							that.cartList.forEach(item =>{
								if(item.goods_id == goods_list[index].goods_id) {
									ids.push(item.goods_id)
								}
							})
							if(ids.indexOf(goods_list[index].goods_id) > -1) {
								if(num <= 1) {
									goods_list[index].num = 0
								}
							}
						}
					},
					
					//添加商品/wx/cart/add
					addCart(index) {
						let that = this;
						if (that.box == 2) {
							return
						}
						that.box = 2;
						axios({
								method: 'post',
								url: that.jumpUrl.add,
								data: that.addGoods
							})
							.then(function (resp) {
								that.box = 1;
								if (resp.data.errno === 0) {
									that.count = resp.data.data.cartTotal.checkedGoodsCount; //总共几件
					
									that.cartList = resp.data.data.cartList;
					
									for (var i = 0; i < that.cartList.length; i++) {
										for (var j = 0; j < that.goods_list.length; j++) {
											if (that.cartList[i].goods_id == that.goods_list[j].goods_id && that.cartList[i].spcifi_id == that.goods_list[j].spcifi_id) {
												that.goods_list[j].num = that.cartList[i].number;
												if (that.goods_list[j].num < 0) {
													that.goods_list[j].num = 0;
												}
											} 
										}
					
									}
								} else {
									that.message = {
										show: 1,
										text: resp.data.errmsg,
										type: 'error'
									}
									setTimeout(function () {
										that.message.show = 0;
									}, 2000)
									return;
								}
					
					
					
							}).catch(function (error) {
								//请求失败
								console.log('error', error);
					
							})
					},
					
				}
			})
		</script>
	</body>
</html>
