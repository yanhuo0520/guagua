<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8">
		<title>聚农优享</title>
		<meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
		<meta http-equiv="Pragma" content="no-cache" />
		<meta http-equiv="Expires" content="0" />
		<meta name="viewport" content="width=device-width,initial-scale=1.0, user-scalable=no, maximum-scale=1.0, minimum-scale=1.0">
		<link rel="stylesheet" href="css/reset.css">
		<link rel="stylesheet" href="css/public.css">
		<link rel="stylesheet" href="font/font_560087_tt31urijhi307ldi/iconfont.css">
		<link rel="stylesheet" href="css/index.css">
		<link rel="stylesheet" type="text/css" href="./css/aui.css" />
		<script src="./js/vue.js"></script>
		<script src="js/index.js"></script>
		<script src="js/axios.min.js"></script>
		<script type="text/javascript" src="js/publick.js?v=3"></script>
		<script type="text/javascript" src="./js/jweixin-1.4.0.js"></script>
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vant@2.5.9/lib/index.css">
		<script src="https://cdn.jsdelivr.net/npm/vant@2.5.9/lib/vant.min.js"></script>
		<style>
			[v-cloak] {
				display: none;
			}
			html,body { font-size: 16px; }
			@media all and (max-width:375px) {
                body,html{
                    font-size: 14px;
                }
			}
			@media only screen and (min-width: 414px) {
				body,html {
					font-size: 16px !important;
				}
			}
			@media only screen and (min-width: 480px) {
				body,html {
					font-size: 22px !important;
				}
			}
			/* 导航栏 */
			.van-nav-bar .van-icon { color: #333; font-size: 1.1rem; }
			.van-nav-bar .van-nav-bar__right { position: absolute; top: 50%; transform: translateY(-50%); }
			.van-nav-bar .van-nav-bar__right img { display: block; }
			.van-nav-bar .van-nav-bar__title { font-weight: bold; }
			/* 商品列表 */
			.order-group .price-icon { color: #ee0a24; font-size: 0.75rem; }
			.order-group .coupon_price { color: #ee0a24; font-size: 0.875rem; }
			.goods-card { background:rgba(255,255,255,1);  width: 94%; margin: 0 auto; margin-top: 0.75rem; border-radius: 8px;}
			/* .order-group:first-child .goods-card { margin-top: 0; } */
			.goods-card .top-name { display: flex; align-items: center; justify-content: space-between; height: 40px; }
			.goods-card .top-name .time { color: #888888; font-size: 0.75rem; }
			.goods-card .top-name .status-name { font-size: 0.875rem; font-weight: 400; color:#00B578 }
			.goods-card .top-name img { height: 30px; }
			.goods-card .van-card { padding-left: 0.75rem; padding-right: 0.75rem; margin-top: 0; background:rgba(255,255,255,1); }
			.goods-card .van-card .van-card__header { align-content: center; }		
			.goods-card .van-card .van-card__thumb { width: auto; height: auto; display: flex; align-items: center; margin-right: 0.5rem;}
			/* .goods-card .van-card .van-card__content { width: 150px; flex: none; -webkit-box-flex: none; -webkit-box-flex: none } */
			.goods-card .van-card .van-card__title { width: calc(100% - 5rem); font-size:0.9rem; font-weight:600; color:rgba(53,53,53,1); padding-bottom: 0.375rem; }
			.goods-card .van-card .desc { width: calc(100% - 2.5rem); font-size:0.75rem; font-weight:400; color:rgba(136,136,136,1); }
			.goods-card .van-card .desc p{ padding: 0; margin: 0; word-break:break-all;word-wrap:break-word; }
			.goods-card .van-card .van-card__price { font-size:0.9rem; font-weight:400; color:#353535;}
			.goods-card .van-card .van-card__price .price { position: absolute; top: 0; right: 0; width: 5rem; text-align: right;text-overflow: ellipsis; overflow: hidden; }
			.goods-card .van-card .van-card__price .price1 { position: absolute; bottom: 1.25rem; right: 0; width: 5rem; text-align: right;text-overflow: ellipsis; overflow: hidden; font-size:0.75rem; font-weight:400; color:#888888 }
			.goods-card .van-card .van-card__num { font-size:0.75rem; font-weight:400; color:#888888 }
			.goods-card .van-card .van-card__num .num { position: absolute; top: 1.25rem; right: 0; width: 2.5rem;text-align: right;text-overflow: ellipsis; overflow: hidden; }
			.goods-card .van-card .van-card__num .price2 { position: absolute; bottom: 0; right: 0; width: 5rem; text-align: right;text-overflow: ellipsis; overflow: hidden; font-size:0.75rem; font-weight:400; color:#888888 }
			.goods-card .delivery .van-cell_title,.goods-card .delivery .van-cell__value { font-size:0.9rem; font-weight:400; color:rgba(51,51,51,1);}
			.goods-card .ship-date { font-size:0.75rem; font-weight:400; color:rgba(136,136,136,1); padding: 0 0.75rem 0 0.75rem }
			.goods-card .ship-date .ship-date-bg { display: flex; justify-content: space-between; align-items: center; background:rgba(245,245,245,1); padding: 0 0.75rem; }
			.goods-card .deal-way .van-cell__title { font-size:0.9rem; font-weight:400; color:rgba(136,136,136,1);}
			.goods-card .deal-way .van-cell__value { font-size:0.9rem; font-weight:400; color:rgba(51,51,51,1); }
			.goods-card .goods_total_price .van-cell { font-size: 0.9rem; color: #333; }
			.goods-card .goods_total_price .van-cell__value { color: #333; }
			.goods-card .other-mark .van-cell { font-size: 0.9rem; color: #888888; }
			.goods-card .other-mark .van-cell .van-cell__value { color: #888888;  }
			.goods-card .other-mark .van-cell .price { color: #ff2814; font-weight: 400; }
			.goods-card .item-total { padding: 0.75rem; text-align: right; color: #888;font-size: 0.75rem; }
			.goods-card .item-total .price { font-size: 0.875rem; color: #333; }
			.goods-card .btn-con { padding: 0.75rem; padding-top: 0; text-align: right; }
			/* loading */
			.full-loading { position: fixed; left: 0; top: 90px; right: 0; bottom: 0; background-color: transparent; z-index: 9999; }
			.full-loading .van-loading { position: absolute; top: 50%; left: 50%; transform: translate(-50%,-50%) }
			/* 无数据 */
			.no-data { position: fixed; top: 90px; left: 0; right: 0; bottom: 0; }
			.no-data .no-data-con { position: absolute;  width: 90%; top: 50%; left: 50%; transform: translate(-50%,-50%); text-align: center; }
			.no-data .no-data-con img { width: 100%; }
			.no-data .no-data-con .no-title{ font-size: 1rem; font-weight:600;  color:rgba(0,0,0,1);  }
			.no-data .no-data-con .no-desc { font-size: 0.75rem; font-weight:400; color:rgba(136,136,136,1); padding: 0.8rem 0; }
			.no-data .no-data-con .van-button { font-size: 0.75rem; font-weight:400; color:rgba(1,195,39,1); }
		</style>


	</head>
	<body>
		<div id="app" v-cloak>
			<van-nav-bar :border="false" :fixed="true" :placeholder="true" z-index="9999" title="我的订单" left-arrow @click-left="returnLast()" @click-right="JumpIndex" >
				<template #right>
					<img src="images/icon/shouye.png" alt="" width="20"  @click="JumpIndex">
				</template>
			</van-nav-bar>
			<van-sticky :offset-top="46">
				<van-tabs v-model="status" @change="handleClick" background="#f5f5f5" color="#00B578" line-width="35px" line-height="2px" title-active-color="#00B578">
					<van-tab title="全部" name=""></van-tab>
					<van-tab title="待付款" name="1"></van-tab>
					<van-tab title="待发货" name="2"></van-tab>
					<van-tab title="待收货" name="7"></van-tab>
					<van-tab title="已完成" name="10"></van-tab>
				</van-tabs>
			</van-sticky>
			<div class="order-con" v-if="payment && payment.length > 0">
				<van-list v-model="orderLoading" :immediate-check="false" :finished="finished" @load="getOrderLists" finished-text="没有更多了" >
					<template >
						<div class="order-group" v-for="(item,index) in payment" :key="index" >
							<div class="goods-card">
								<div style="padding: 0 0.75rem;">
									<div class="top-name van-hairline--bottom" >
										<span class="time">{{ item.add_time }}</span>
										<template v-if="item.order_status != 10">
											<span  class="status-name" :style="item.order_status == 1 ? 'color:#ff6010' : ''">{{ item.order_status_name }}</span>
										</template>
										<template v-else>
											<img src="./images/order-finish.png" alt="">
										</template>
									</div>
								</div>
								<div v-for="(subItem, subIndex) in item.goodsList" :key="subIndex" @click="detailsOrder(item.order_id)">
									<van-card :title="subItem.goods_name" :centered="true" >
										<template #thumb>
											<div>
												<van-image width="6.25rem" height="6.25rem" fit="contain" :src="subItem.thumb" />
											</div>
										</template>
										<template #desc>
											<div class="desc" :style="subItem.two==1 ? 'width:calc(100% - 5rem)' : ''">
												<p v-if="subItem.oneStylesName">{{ subItem.oneStylesTitle }}: {{ subItem.oneStylesName }}</p>
												<p v-if="subItem.twoStylesName">{{ subItem.twoStylesTitle }}: {{ subItem.twoStylesName }}</p>
												<p v-if="subItem.threeStylesName">{{ subItem.threeStylesTitle }}: {{ subItem.threeStylesName }}</p>
											</div>
										</template>
										<template #price>
											<div class="price" v-if="!subItem.pro_price">
												<span style="font-size: 0.7rem;">￥</span>{{subItem.retail_price}}
											</div>
											<div v-else>
												<div class="price" style="color: #ff2814;" >
													<span style="font-size: 0.7rem;">￥</span>{{subItem.pro_price}}
												</div>
												<div class="price" style="top:1.25rem;color: #888888;text-decoration:line-through" >
													<span style="font-size: 0.7rem;">￥</span>{{subItem.retail_price}}
												</div>
											</div>
										</template>
										<template #num>
											<div class="num" v-if="!subItem.pro_price">
												<span style="font-size: 0.5rem;">X</span>{{subItem.goods_num}}
											</div>
											<div class="num" v-else style="top:2.5rem">
												<span style="font-size: 0.5rem;">X</span>{{subItem.goods_num}}
											</div>
										</template>
										<template #bottom>
											<div class="bottom">
												<!-- <van-tag color="#e9f8ee" text-color="#13ba82">24小时内发货</van-tag> -->
											</div>
										</template>
									</van-card>
								</div>
								<div class="item-total">
									<span>共{{item.goods_num}}件商品 总价<span style="font-size: 0.75rem;">￥</span>{{item.total_price}}<span v-if="item.coupon_price > 0"> 优惠<span style="font-size: 0.75rem;">￥</span>{{item.coupon_price}}</span></span>	
									<span class="price">需付款 <span style="font-size: 0.75rem;">￥</span><span style="font-weight: bold;">{{item.real_price}}</span></span>
								</div>
								<div class="btn-con" v-if="item.order_status == 1">
									<van-button type="default" plain hairline round color="#676767" size="small" style="margin-right: 1rem;" @click="cancelOrder(item.order_id,index)">取消</van-button>
									<van-button type="primary" plain hairline round color="#00b578" size="small" @click="goPay(item)">付款</van-button>
								</div>
								<div class="btn-con" v-if="item.order_status == 2">
									<van-button type="primary" plain hairline round color="#00b578" size="small" @click="refundOrder(item.order_id)">退换货</van-button>
								</div>
								<div class="btn-con" v-if="item.order_status == 7">
									<van-button type="primary" plain hairline round color="#00b578" size="small" style="margin-right: 1rem;" @click="refundOrder(item.order_id)">退换货</van-button>
									<van-button type="primary" plain hairline round color="#00b578" size="small" @click="confirmOrder(item.order_id)">确认收货</van-button>
								</div>
								<div class="btn-con" v-if="item.order_status == 10">
									<van-button type="default" plain hairline round color="#676767" size="small" style="margin-right: 1rem;" @click="deleteOrder(item.order_id,index)">删除</van-button>
									<!-- <van-button type="primary" plain hairline round color="#00b578" size="small" @click="refundOrder(item.order_id)">退换货</van-button> -->
								</div>
							</div>
						</div>  
					</template>
				</van-list>
			</div>
			<div class="full-loading" v-if="isFullLoading">
				<van-loading  color="#1989fa" /> 
			</div>
	
			<div class="no-data" v-if="(payment.length === 0 || isErr) && !isFullLoading">
				<div class="no-data-con">
					<img :src="isErr ? errImg : noDataImg" alt="">
					<p class="no-title">{{ isErr ? '网络竟然崩溃了' : '无订单' }}</p>
					<p class="no-desc">{{ isErr ? '别紧张,试试看刷新页面' : '"还没订单,快点忙里偷闲下一单"' }}</p>
					<van-button size="small" plain round color="#01C327" @click="handleErr">{{ isErr ? '刷新' : '去逛逛' }}</van-button>
				</div>
			</div>
		</div>
		<script>
			var app = new Vue({
				el: '#app',
				data: {
					isFullLoading: true,
					isErr: false,
					payment: [], //待付款
					page: 0,
					orderLoading: true, // 列表请求loading
        			finished: false, // 列表是否请求完成
					status: '',
					noDataImg: './images/no-order-data.png',
      				errImg: './images/err.png',
					JumpUrl: {
						orderLists: baseUrl('/wx/distribution/distribution_order_lists'),
						cancel: baseUrl('/wx/order/new_cancel'),
						del: baseUrl('/wx/order/del'),
						receiving_goods: baseUrl('/wx/order/receiving_goods'),
						refundkUrl: baseUrl('/wx/order/refund_goods'),
						coupon_detail: baseUrl('/wx/coupon/coupon_detail'),
						jssdkUrl: 'http://sy.xfd365.com/wx/jssdk/getSignPackage',
					},
					order_status: '',
					orderCancel: {
						token: localStorage.getItem("token"),
						order_id: '',
					},
					token: localStorage.getItem("token"),
					coupon_id: '',
					user_coupon_id: '',
					couponDetail: ''
				},
				methods: {
					//跳转首页
					JumpIndex() {
						window.location.href = 'disCouponGoods.html?coupon_id='+this.coupon_id+'&user_coupon_id='+this.user_coupon_id+'&v=1';
						localStorage.setItem('status', '')
					},
					//返回上一页
					returnLast() {
						window.location.href = 'disPersonal.html?coupon_id='+this.coupon_id+'&user_coupon_id='+this.user_coupon_id;
						localStorage.setItem('status', '')
					},
					//跳转订单详情
					detailsOrder(val) {
						var status = localStorage.getItem('status')
						if (status) {
							window.location.href = 'disOrderDetails.html?order_id=' + val + '&status=' + this.status+'&coupon_id='+this.coupon_id+'&user_coupon_id='+this.user_coupon_id;
						} else {
							window.location.href = 'disOrderDetails.html?order_id=' + val +'&coupon_id='+this.coupon_id+'&user_coupon_id='+this.user_coupon_id;
						}
					},
					// 切换订单状态
					handleClick(name, title) {
						this.page = 0
						this.payment = [];
						localStorage.setItem('status', name)
						this.order_status = name;
						this.getOrderLists();
					},

					//确认订单
					goPay(item) {
						window.location.href = 'disPay.html?order_id=' + item.order_id +'&coupon_id='+this.coupon_id+'&user_coupon_id='+this.user_coupon_id+ '&orderMy=1';
					},
					//确认收货
					confirmOrder(val) {
						var that = this;
						that.orderCancel.order_id = val;
						that.orderCancel.coupon_id = that.coupon_id;
						that.orderCancel.user_coupon_id = that.user_coupon_id;
						that.$dialog.confirm({
							title: '提示',
							message: '确认收货吗?',
						}).then(() => {
							axios({
								method: 'post',
								url: that.JumpUrl.receiving_goods,
								data: that.orderCancel
							})
							.then(function(resp) {
								that.$toast.success('收货成功')
								that.page = 0
								that.payment = [];
								that.getOrderLists();
							}).catch(function(error) {
								//请求失败
								console.log('error', error);
							})
						})
						
					},

					// 订单申请退款
					refundOrder(val) {
						var that = this;
						that.orderCancel.order_id = val;
						that.orderCancel.coupon_id = that.coupon_id;
						that.orderCancel.user_coupon_id = that.user_coupon_id;
						that.$dialog.confirm({
							title: '提示',
							message: '确认申请退换货吗?',
						}).then(() => {
							axios({
								method: 'post',
								url: that.JumpUrl.refundkUrl,
								data: that.orderCancel
							})
							.then(function(resp) {
								if(resp.data.errno == 0){
									that.$toast.success(resp.data.errmsg)
									that.page = 0
									that.payment = [];
									that.getOrderLists();
								}else{
									that.$toast.fail(resp.data.errmsg)
								}
								
							}).catch(function(error) {
								//请求失败
								console.log('error', error);
						
							})
						})
						
					},

					//删除订单
					deleteOrder(val) {
						var that = this;
						that.orderCancel.order_id = val;
						that.orderCancel.coupon_id = that.coupon_id;
						that.orderCancel.user_coupon_id = that.user_coupon_id;
						// that.state.order_status = that.status;
						that.$dialog.confirm({
							title: '提示',
							message: '确认删除此订单吗?',
						}).then(() => {
							axios({
								method: 'post',
								url: that.JumpUrl.del,
								data: that.orderCancel
							})
							.then(function(resp) {
								that.page = 0
								that.payment = [];
								that.getOrderLists();
								// that.payment.splice(index,1)
							}).catch(function(error) {
								//请求失败
								console.log('error', error);
							})
						})
						
					},
					//取消订单
					cancelOrder(val, index) {
						var that = this;
						let order_id = val;
						that.$dialog.confirm({
							title: '提示',
							message: '确认取消订单吗?',
						}).then(() => {
							axios({
									method: 'post',
									url: that.JumpUrl.cancel,
									data: {
										token: localStorage.getItem('token'),
										order_id: order_id,
										coupon_id: that.coupon_id,
										user_coupon_id: that.user_coupon_id
									}
								})
								.then(function(resp) {
									// console.log(resp.data)
									if (resp.data.errno == 0) {
										that.$toast.success('取消成功')
										setTimeout(function() {
											if (that.order_status) {
												that.payment.splice(index, 1)
											} else {
												window.location.reload()
											}
										}, 2000)

									}
								}).catch(function(error) {
									//请求失败
									console.log('error', error);
								})
						})
						
					},

					//获取订单状态
					getOrderLists() {
						var that = this;
						let page = this.page + 1
						that.isFullLoading = true
						that.isErr = false 
						if (page !== 1) {
							that.orderLoading = true
						}
						axios({
								method: 'post',
								url: that.JumpUrl.orderLists,
								data: {
									token: localStorage.getItem('token'),
									order_status: that.order_status,
									page: page,
									size: 10,
									coupon_id: that.coupon_id,
									user_coupon_id: that.user_coupon_id
								}
							})
							.then(function(resp) {
								that.isErr = false 
								that.orderLoading = false
								that.isFullLoading = false
								if (resp.data.errno == 0) {
									let resultData = resp.data.data;
									if (resultData) {
										for (var i = 0; i < resultData.length; i++) {
											if (resultData[i].order_status == 1) {
												resultData[i].order_status_name = '未付款'
											};
											if (resultData[i].order_status == 2) {
												resultData[i].order_status_name = '待发货'
											};
											if (resultData[i].order_status == 3) {
												resultData[i].order_status_name = '支付失败'
											};
											if (resultData[i].order_status == 6) {
												resultData[i].order_status_name = '已退款'
											};
											if (resultData[i].order_status == 7) {
												resultData[i].order_status_name = '待收货'
											};
											if (resultData[i].order_status == 8) {
												resultData[i].order_status_name = '退换货'
											};
											if (resultData[i].order_status == 10) {
												resultData[i].order_status_name = '已完成'
											};
											if (resultData[i].order_status == 5) {
												resultData[i].order_status_name = '已取消'
											};
											let time = resultData[i].add_time+''
											resultData[i].add_time = that.dateFormat('yyyy-MM-dd HH:mm:ss',new Date(time.length == 10 ? time*1000 : time ))
										}
										that.payment = that.payment.concat(resultData)
									}
									that.page = page
									if (that.page >= resp.data.total_page) {
										that.finished = true
									} else {
										that.finished = false
									}
								} else {
									that.orderLoading = false
									that.finished = true
									that.$toast(resp.data.errmsg)
								}
								// console.log(resultData, 'aaaa')
								
							}).catch(function(error) {
								that.isErr = true
								that.isFullLoading = false
								that.orderLoading = false
								//请求失败
								console.log('error', error);
							})

					},
					setWx() {
						let that = this;
						let share_title = that.couponDetail.name
						let share_introduction = '前往领券中心领取优惠券'
						let logo = that.couponDetail.share_img
						wx.ready(function () { //需在用户可能点击分享按钮前就先调用
							wx.updateAppMessageShareData({
								title: share_title, // 分享标题
								desc: share_introduction, // 分享描述
								// link: that.share_url, // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
								link: 'http://sy.xfd365.com/mobile/getShopCoupon.html',  // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
								imgUrl: logo, // 分享图标
								success: function () {

								}
							})
							wx.updateTimelineShareData({
								title: share_title, // 分享标题
								desc: share_introduction, // 分享描述
								// link: that.share_url, // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
								link: 'http://sy.xfd365.com/mobile/getShopCoupon.html',  // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
								imgUrl: logo, // 分享图标
								success: function () {}
							})
						});
					},
					getJssdk() {
						let that = this;
						axios({
							method: 'post',
							url: that.JumpUrl.jssdkUrl,
							//data: form_data
							data: {
								token: that.token,
								url: window.location.href
							}
						}).then(function(resp) {
							let data = resp.data

							let sdkData = resp.data
							wx.config({
								debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
								appId: sdkData.appId, // 必填，公众号的唯一标识
								timestamp: sdkData.timestamp, // 必填，生成签名的时间戳
								nonceStr: sdkData.nonceStr, // 必填，生成签名的随机串
								signature: sdkData.signature, // 必填，签名
								jsApiList: [
									'updateAppMessageShareData',
									'updateTimelineShareData',
								] // 必填，需要使用的JS接口列表
							});
							if(localStorage.getItem('disCouponDetail')) {
								that.couponDetail = JSON.parse(localStorage.getItem('disCouponDetail'))
							}
							that.setWx(); 

						})
					},
					handleErr() {
						if(this.isErr) {
							this.getOrderLists()
						}else {
							window.location.href = 'disCouponGoods.html?coupon_id='+this.coupon_id+'&user_coupon_id='+this.user_coupon_id+'&v=1';
						}
					},
					/**
					* 日期格式转换
					* @param fmt 要处理成的日期格式 例: 'yyyy-MM-dd hh:mm:ss'
					* @param date 要处理的日期，需Date类型
					*/
					dateFormat(fmt, date) {
						date = date ? date : new Date();
						let o = {
							"M+": date.getMonth() + 1, //月份
							"d+": date.getDate(), //日
							"h+": date.getHours() % 12 === 0 ? 12 : date.getHours() % 12, //小时
							"H+": date.getHours(), //小时
							"m+": date.getMinutes(), //分
							"s+": date.getSeconds(), //秒
							"q+": Math.floor((date.getMonth() + 3) / 3), //季度
							"S": date.getMilliseconds() //毫秒
						};
						let week = {
							"0": "/u65e5",
							"1": "/u4e00",
							"2": "/u4e8c",
							"3": "/u4e09",
							"4": "/u56db",
							"5": "/u4e94",
							"6": "/u516d"
						};
						if (/(y+)/.test(fmt)) {
							fmt = fmt.replace(RegExp.$1, (date.getFullYear() + "").substr(4 - RegExp.$1.length));
						}
						if (/(E+)/.test(fmt)) {
							fmt = fmt.replace(RegExp.$1, ((RegExp.$1.length > 1) ? (RegExp.$1.length > 2 ? "/u661f/u671f" : "/u5468") : "") + week[date.getDay() + ""]);
						}
						for (let k in o) {
							if (new RegExp("(" + k + ")").test(fmt)) {
								fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
							}
						}
						return fmt;
					},
					// 删除上个页面存储数据
					removeLocal() {
						localStorage.removeItem('getCouponData')
						localStorage.removeItem('myCouponToDetail')
						localStorage.removeItem('myCouponList')
					},
					checkPhone() {
						var _this = this
						var agent = (navigator.userAgent || navigator.vendor || window.opera)
						if (agent != null) {
							var agentName = agent.toLowerCase()
							if (/android/i.test(agentName)) {
								return 'android'
							} else if (/iphone/i.test(agentName)) {
								return 'ios'
							}
						}
					},
				},
				created() {
					let phoneType = this.checkPhone()
					// 监听页面关闭事件
					if(phoneType == 'android'){
						window.onunload = function () {
							this.removeLocal()
						}
					} else if(phoneType == 'ios') {
						window.addEventListener('pagehide', function () {
							this.removeLocal()
						});
					}
					this.coupon_id = getQueryString('coupon_id')
					this.user_coupon_id = getQueryString('user_coupon_id')
					this.getJssdk();
					this.status = window.location.href.split("status=")[1];
					this.order_status = this.status;
					this.payment = [];
					this.page = 0;
					this.getOrderLists();
				}
			})
		</script>
	</body>

</html>
